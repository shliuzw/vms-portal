<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.0.xsd"
       default-lazy-init="true">

    <description>Shiro Configuration</description>
	<!-- 安全管理器。spring和shiro集成，securityMananger是Subject的管理类 -->
   	 <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
		<property name="realm" ref="shiroRealm" />
		<!-- <property name="sessionManager" ref="sessionManager"/> -->
		<!-- 使用下面配置的缓存管理器 -->
		<property name="cacheManager" ref="cacheManager" />
	</bean>
	<!-- realm实现。項目自定义的Realm -->
	<bean id="shiroRealm" class="com.jy.interceptor.shiro.ShiroRealm" >
		<property name="authenticationTokenClass" value="com.jy.interceptor.shiro.UsernameSmsToken"/>

	</bean>
	<!-- 缓存管理器 使用Ehcache实现-->
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">
		<property name="cacheManagerConfigFile" value="classpath:/spring/ehcache.xml"/>
	</bean>

	<!-- Shiro web过滤器。 是整个shiro的入口点，用于拦截需要安全控制的请求进行处理 -->
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
		<property name="securityManager" ref="securityManager" />
		<property name="loginUrl" value="/loginIndex" />
		<property name="successUrl" value="/backstage/index" />
		<property name="unauthorizedUrl" value="/loginIndex" />
			<!--
				filterChainDefinitions：生命filter和url的关系
				anon:匿名拦截器，即不需要登录即可访问；一般用于静态资源过滤
        		authc:如果没有登录会跳到相应的登录页面登录
        		user:用户拦截器，用户已经身份验证/记住我登录的都可 -->
		<property name="filterChainDefinitions">
			<value>
				/content/**  = anon
			</value>
		</property>
	</bean>

	<!-- AOP式方法级权限检查 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor">
        <property name="proxyTargetClass" value="true" />
    </bean>
    
    <!-- shiro生命周期处理器。保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>